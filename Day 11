Repeat and Missing Number Array
You are given a read only array of n integers from 1 to n.

Each integer appears exactly once except A which appears twice and B which is missing.

Return A and B.

Note: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Note that in your output A should precede B.

Example:

Input:[3 1 2 5 3] 

Output:[3, 4] 

A = 3, B = 4
User Code

 public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] repeatedNumber(final int[] A) {
        int n = A.length;
        int rnum = -1;
        int mnum = -1;
        int[] temp = new int[n];
        for(int i =0 ;i<n ;i++){
            temp[A[i]-1]++;
            if(temp[A[i]-1] > 1){
                rnum = A[i];
            }
        }
        for(int i=0;i<n;i++){
            if(temp[i]==0){
                mnum = i+1;
                break;
            }
        }
        return new int[]{rnum,mnum};
    }
}
